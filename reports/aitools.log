Traceback (most recent call last):
  File "/home/petri/venv/python3/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/home/petri/venv/python3/lib/python3.9/site-packages/nbclient/client.py", line 1117, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/petri/venv/python3/lib/python3.9/site-packages/nbclient/util.py", line 78, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/home/petri/venv/python3/lib/python3.9/site-packages/nbclient/util.py", line 57, in just_run
    return loop.run_until_complete(coro)
  File "/usr/lib/python3.9/asyncio/base_events.py", line 642, in run_until_complete
    return future.result()
  File "/home/petri/venv/python3/lib/python3.9/site-packages/nbclient/client.py", line 558, in async_execute
    await self.async_execute_cell(
  File "/home/petri/venv/python3/lib/python3.9/site-packages/nbclient/client.py", line 862, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/home/petri/venv/python3/lib/python3.9/site-packages/nbclient/client.py", line 765, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# This code generates the graph

import networkx as nx
import matplotlib.pyplot as plt

# Create an empty directed graph
M=nx.DiGraph()

# List of towns added as nodes
Towns=['Vaasa', 'Laihia', 'V√∂yri', 'Ilmajoki', 'Ylistaro', 'Sein√§joki',
    'V√∂yri', 'Lapua', 'Jepua', 'Alaj√§rvi', 'Kyyj√§rvi', 'Kuortane',
    'Kauhava', 'Lappaj√§rvi', 'Evij√§rvi', 'Vimpeli']

# Add the nodes and store the coordinates of the towns as well, for nice plotting
for town in Towns:
    M.add_node(town, pos=getCoordinates(town))

# Add the edges, and their weights = distances 
M.add_edge('Vaasa', 'Laihia', weight=26)
M.add_edge('Vaasa', 'V√∂yri', weight=32)
M.add_edge('Laihia', 'Ilmajoki', weight=45)
M.add_edge('Laihia', 'Ylistaro', weight=29)
M.add_edge('V√∂yri', 'Jepua', weight=42)
M.add_edge('V√∂yri', 'Kauhava', weight=56)
M.add_edge('Ilmajoki', 'Sein√§joki', weight=18)
M.add_edge('Ylistaro', 'Sein√§joki', weight=27)
M.add_edge('Ylistaro', 'Lapua', weight=28)
M.add_edge('Sein√§joki', 'Lapua', weight=26)
M.add_edge('V√∂yri', 'Kauhava', weight=45)
M.add_edge('V√∂yri', 'Jepua', weight=42)
M.add_edge('Lapua', 'Kauhava', weight=18)
M.add_edge('Lapua', 'Alaj√§rvi', weight=46)
M.add_edge('Jepua', 'Kauhava', weight=56)
M.add_edge('Alaj√§rvi', 'Kyyj√§rvi', weight=36)
M.add_edge('Alaj√§rvi', 'Vimpeli', weight=22)
M.add_edge('Alaj√§rvi', 'Kuortane', weight=40)
M.add_edge('Kauhava', 'Lappaj√§rvi', weight=38)
M.add_edge('Kauhava', 'Evij√§rvi', weight=44)
M.add_edge('Lappaj√§rvi', 'Vimpeli', weight=23)
M.add_edge('Evij√§rvi', 'Vimpeli', weight=32)

# Plot the graph nicely in scale
fig=plt.figure(figsize=(8,8))
pos=nx.get_node_attributes(M,'pos') 
nx.draw_networkx(M, pos=pos, node_color='orange')
labels = nx.get_edge_attributes(M,'weight')
nx.draw_networkx_edge_labels(M,pos,edge_labels=labels)

print("Graph is ready")
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mModuleNotFoundError[0m                       Traceback (most recent call last)
[0;32m/tmp/ipykernel_837780/3317607934.py[0m in [0;36m<module>[0;34m[0m
[1;32m      1[0m [0;31m# This code generates the graph[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m      2[0m [0;34m[0m[0m
[0;32m----> 3[0;31m [0;32mimport[0m [0mnetworkx[0m [0;32mas[0m [0mnx[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m      4[0m [0;32mimport[0m [0mmatplotlib[0m[0;34m.[0m[0mpyplot[0m [0;32mas[0m [0mplt[0m[0;34m[0m[0;34m[0m[0m
[1;32m      5[0m [0;34m[0m[0m

[0;31mModuleNotFoundError[0m: No module named 'networkx'
ModuleNotFoundError: No module named 'networkx'

